rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    match /posts/{postId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        // Allow updating comments and their likes
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['comments', 'stats']) ||
        // Allow updating post likes
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']) ||
        // Allow updating share count
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['stats'])
      );
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.authorId;
    }

    match /users/{userId} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    match /students/{studentId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
      );
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
      );
    }
  }
}